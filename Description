DESCRIPTION:

	Shortest job next (SJN), is also known as shortest job first (SJF).
	Shortest Job First (SJF) is an algorithm in which the process having the smallest execution time is chosen for the next execution.
	This scheduling method can be preemptive or non-preemptive.
	It reduces the average amount of time each process has to wait until its execution is complete. 
	SJN is frequently used for long term scheduling.
	It can improve process throughput by making sure that shorter jobs are executed first.
	This algorithm method is helpful for batch-type processing.
	Disadvantage of using shortest job next is that the total execution time of a job must be known before execution.
Non Pre-emptive:

	Non-preemptive Scheduling is used when a process terminates, or a process switches from running to waiting state.
	In non-preemptive scheduling, once the CPU cycle is allocated to the process, the process holds it till it reaches a waiting state or terminated.
	Process can not be interrupted untill it terminates itself or its time is up.
	If a process with long burst time is running CPU, then later coming process with less CPU burst time may starve.
	It does not have overheads, it is rigid.

Pre-emptive:

	Preemptive scheduling is used when a process switches from running state to ready state or from waiting state to ready state.
	The resources are allocated to the process for the limited amount of time and then taken away.
	The process is again placed back in the ready queue, if that process still has CPU burst time remaining.
	That process stays in ready queue till it gets next chance to execute.

Advantages of shortest job next :

	SJN is frequently used for long term scheduling.
	It reduces the average waiting time 
	SJN method gives the lowest average waiting time for a specific set of processes.
	It is appropriate for the jobs running in batch, where run times are known in advance.
	For the batch system of long-term scheduling, a burst time estimate can be obtained from the job description.
	For Short-Term Scheduling, we need to predict the value of the next burst time.Probably optimal with regard to average turnaround time.
Dis- advantages:

	Job completion time must be known earlier, but it is hard to predict.
	It is often used in a batch system for long term scheduling.
	SJN can't be implemented for CPU scheduling for the short term. It is because there is no specific method to predict the length of the upcoming CPU burst.
	This algorithm may cause very long turnaround times or starvation.
	Requires knowledge of how long a process or job will run.
	It leads to the starvation that does not reduce average turnaround time.
	It is hard to know the length of the upcoming CPU request.
	Elapsed time should be recorded, that results in more overhead on the processor.
